/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2115.0, "minX": 0.0, "maxY": 21209.0, "series": [{"data": [[0.0, 2115.0], [0.1, 2119.0], [0.2, 2119.0], [0.3, 2119.0], [0.4, 2122.0], [0.5, 2123.0], [0.6, 2139.0], [0.7, 2157.0], [0.8, 2176.0], [0.9, 2269.0], [1.0, 2269.0], [1.1, 2269.0], [1.2, 2269.0], [1.3, 2269.0], [1.4, 2270.0], [1.5, 2271.0], [1.6, 2271.0], [1.7, 2272.0], [1.8, 2272.0], [1.9, 2272.0], [2.0, 2273.0], [2.1, 2273.0], [2.2, 2274.0], [2.3, 2274.0], [2.4, 2274.0], [2.5, 2274.0], [2.6, 2275.0], [2.7, 2275.0], [2.8, 2275.0], [2.9, 2276.0], [3.0, 2276.0], [3.1, 2276.0], [3.2, 2276.0], [3.3, 2276.0], [3.4, 2276.0], [3.5, 2276.0], [3.6, 2276.0], [3.7, 2276.0], [3.8, 2276.0], [3.9, 2277.0], [4.0, 2277.0], [4.1, 2277.0], [4.2, 2277.0], [4.3, 2277.0], [4.4, 2277.0], [4.5, 2277.0], [4.6, 2277.0], [4.7, 2277.0], [4.8, 2278.0], [4.9, 2278.0], [5.0, 2278.0], [5.1, 2278.0], [5.2, 2278.0], [5.3, 2278.0], [5.4, 2278.0], [5.5, 2279.0], [5.6, 2279.0], [5.7, 2279.0], [5.8, 2279.0], [5.9, 2279.0], [6.0, 2279.0], [6.1, 2279.0], [6.2, 2279.0], [6.3, 2279.0], [6.4, 2279.0], [6.5, 2279.0], [6.6, 2279.0], [6.7, 2279.0], [6.8, 2280.0], [6.9, 2280.0], [7.0, 2280.0], [7.1, 2280.0], [7.2, 2280.0], [7.3, 2280.0], [7.4, 2280.0], [7.5, 2281.0], [7.6, 2281.0], [7.7, 2282.0], [7.8, 2282.0], [7.9, 2282.0], [8.0, 2282.0], [8.1, 2282.0], [8.2, 2282.0], [8.3, 2282.0], [8.4, 2283.0], [8.5, 2283.0], [8.6, 2283.0], [8.7, 2283.0], [8.8, 2285.0], [8.9, 2285.0], [9.0, 2285.0], [9.1, 2285.0], [9.2, 2285.0], [9.3, 2286.0], [9.4, 2286.0], [9.5, 2286.0], [9.6, 2286.0], [9.7, 2286.0], [9.8, 2286.0], [9.9, 2286.0], [10.0, 2286.0], [10.1, 2286.0], [10.2, 2287.0], [10.3, 2287.0], [10.4, 2287.0], [10.5, 2288.0], [10.6, 2289.0], [10.7, 2289.0], [10.8, 2289.0], [10.9, 2290.0], [11.0, 2290.0], [11.1, 2290.0], [11.2, 2290.0], [11.3, 2290.0], [11.4, 2290.0], [11.5, 2290.0], [11.6, 2290.0], [11.7, 2290.0], [11.8, 2291.0], [11.9, 2291.0], [12.0, 2291.0], [12.1, 2291.0], [12.2, 2291.0], [12.3, 2291.0], [12.4, 2292.0], [12.5, 2293.0], [12.6, 2294.0], [12.7, 2294.0], [12.8, 2296.0], [12.9, 2296.0], [13.0, 2297.0], [13.1, 2298.0], [13.2, 2298.0], [13.3, 2298.0], [13.4, 2299.0], [13.5, 2299.0], [13.6, 2299.0], [13.7, 2299.0], [13.8, 2300.0], [13.9, 2300.0], [14.0, 2300.0], [14.1, 2300.0], [14.2, 2301.0], [14.3, 2301.0], [14.4, 2301.0], [14.5, 2301.0], [14.6, 2302.0], [14.7, 2302.0], [14.8, 2302.0], [14.9, 2303.0], [15.0, 2303.0], [15.1, 2303.0], [15.2, 2304.0], [15.3, 2304.0], [15.4, 2305.0], [15.5, 2305.0], [15.6, 2306.0], [15.7, 2306.0], [15.8, 2306.0], [15.9, 2307.0], [16.0, 2307.0], [16.1, 2308.0], [16.2, 2309.0], [16.3, 2309.0], [16.4, 2309.0], [16.5, 2309.0], [16.6, 2309.0], [16.7, 2310.0], [16.8, 2310.0], [16.9, 2310.0], [17.0, 2310.0], [17.1, 2310.0], [17.2, 2311.0], [17.3, 2312.0], [17.4, 2313.0], [17.5, 2313.0], [17.6, 2313.0], [17.7, 2313.0], [17.8, 2314.0], [17.9, 2314.0], [18.0, 2314.0], [18.1, 2314.0], [18.2, 2315.0], [18.3, 2315.0], [18.4, 2315.0], [18.5, 2315.0], [18.6, 2315.0], [18.7, 2316.0], [18.8, 2316.0], [18.9, 2316.0], [19.0, 2317.0], [19.1, 2317.0], [19.2, 2317.0], [19.3, 2318.0], [19.4, 2318.0], [19.5, 2318.0], [19.6, 2319.0], [19.7, 2319.0], [19.8, 2319.0], [19.9, 2319.0], [20.0, 2319.0], [20.1, 2319.0], [20.2, 2319.0], [20.3, 2319.0], [20.4, 2319.0], [20.5, 2319.0], [20.6, 2320.0], [20.7, 2320.0], [20.8, 2320.0], [20.9, 2320.0], [21.0, 2321.0], [21.1, 2321.0], [21.2, 2321.0], [21.3, 2321.0], [21.4, 2321.0], [21.5, 2321.0], [21.6, 2322.0], [21.7, 2322.0], [21.8, 2322.0], [21.9, 2322.0], [22.0, 2322.0], [22.1, 2323.0], [22.2, 2323.0], [22.3, 2323.0], [22.4, 2323.0], [22.5, 2323.0], [22.6, 2324.0], [22.7, 2324.0], [22.8, 2324.0], [22.9, 2324.0], [23.0, 2324.0], [23.1, 2325.0], [23.2, 2325.0], [23.3, 2325.0], [23.4, 2325.0], [23.5, 2325.0], [23.6, 2326.0], [23.7, 2326.0], [23.8, 2327.0], [23.9, 2328.0], [24.0, 2329.0], [24.1, 2329.0], [24.2, 2330.0], [24.3, 2330.0], [24.4, 2331.0], [24.5, 2331.0], [24.6, 2331.0], [24.7, 2332.0], [24.8, 2332.0], [24.9, 2333.0], [25.0, 2333.0], [25.1, 2333.0], [25.2, 2333.0], [25.3, 2333.0], [25.4, 2334.0], [25.5, 2334.0], [25.6, 2334.0], [25.7, 2334.0], [25.8, 2334.0], [25.9, 2334.0], [26.0, 2334.0], [26.1, 2335.0], [26.2, 2335.0], [26.3, 2335.0], [26.4, 2335.0], [26.5, 2335.0], [26.6, 2336.0], [26.7, 2337.0], [26.8, 2337.0], [26.9, 2337.0], [27.0, 2337.0], [27.1, 2338.0], [27.2, 2338.0], [27.3, 2339.0], [27.4, 2339.0], [27.5, 2340.0], [27.6, 2340.0], [27.7, 2340.0], [27.8, 2341.0], [27.9, 2341.0], [28.0, 2341.0], [28.1, 2341.0], [28.2, 2342.0], [28.3, 2343.0], [28.4, 2343.0], [28.5, 2344.0], [28.6, 2345.0], [28.7, 2345.0], [28.8, 2346.0], [28.9, 2348.0], [29.0, 2349.0], [29.1, 2349.0], [29.2, 2350.0], [29.3, 2350.0], [29.4, 2351.0], [29.5, 2351.0], [29.6, 2351.0], [29.7, 2352.0], [29.8, 2352.0], [29.9, 2352.0], [30.0, 2353.0], [30.1, 2354.0], [30.2, 2354.0], [30.3, 2355.0], [30.4, 2355.0], [30.5, 2356.0], [30.6, 2356.0], [30.7, 2356.0], [30.8, 2356.0], [30.9, 2357.0], [31.0, 2357.0], [31.1, 2359.0], [31.2, 2359.0], [31.3, 2359.0], [31.4, 2359.0], [31.5, 2360.0], [31.6, 2360.0], [31.7, 2360.0], [31.8, 2360.0], [31.9, 2361.0], [32.0, 2361.0], [32.1, 2362.0], [32.2, 2362.0], [32.3, 2362.0], [32.4, 2362.0], [32.5, 2362.0], [32.6, 2363.0], [32.7, 2363.0], [32.8, 2363.0], [32.9, 2363.0], [33.0, 2364.0], [33.1, 2364.0], [33.2, 2364.0], [33.3, 2364.0], [33.4, 2364.0], [33.5, 2365.0], [33.6, 2366.0], [33.7, 2366.0], [33.8, 2366.0], [33.9, 2367.0], [34.0, 2367.0], [34.1, 2367.0], [34.2, 2367.0], [34.3, 2367.0], [34.4, 2371.0], [34.5, 2373.0], [34.6, 2376.0], [34.7, 2378.0], [34.8, 2378.0], [34.9, 2381.0], [35.0, 2381.0], [35.1, 2382.0], [35.2, 2383.0], [35.3, 2420.0], [35.4, 2422.0], [35.5, 2425.0], [35.6, 2435.0], [35.7, 2436.0], [35.8, 2439.0], [35.9, 2440.0], [36.0, 2444.0], [36.1, 2445.0], [36.2, 2445.0], [36.3, 2448.0], [36.4, 2449.0], [36.5, 2455.0], [36.6, 2467.0], [36.7, 2470.0], [36.8, 2475.0], [36.9, 2475.0], [37.0, 2480.0], [37.1, 2481.0], [37.2, 2491.0], [37.3, 2574.0], [37.4, 2575.0], [37.5, 2575.0], [37.6, 2576.0], [37.7, 2576.0], [37.8, 2577.0], [37.9, 2579.0], [38.0, 2580.0], [38.1, 2581.0], [38.2, 2584.0], [38.3, 2592.0], [38.4, 2593.0], [38.5, 2597.0], [38.6, 2599.0], [38.7, 2599.0], [38.8, 2600.0], [38.9, 2604.0], [39.0, 2604.0], [39.1, 2605.0], [39.2, 2605.0], [39.3, 2607.0], [39.4, 2608.0], [39.5, 2612.0], [39.6, 2614.0], [39.7, 2614.0], [39.8, 2615.0], [39.9, 2616.0], [40.0, 2617.0], [40.1, 2619.0], [40.2, 2620.0], [40.3, 2622.0], [40.4, 2623.0], [40.5, 2624.0], [40.6, 2624.0], [40.7, 2625.0], [40.8, 2625.0], [40.9, 2627.0], [41.0, 2627.0], [41.1, 2627.0], [41.2, 2627.0], [41.3, 2629.0], [41.4, 2629.0], [41.5, 2630.0], [41.6, 2630.0], [41.7, 2630.0], [41.8, 2630.0], [41.9, 2632.0], [42.0, 2632.0], [42.1, 2633.0], [42.2, 2634.0], [42.3, 2635.0], [42.4, 2637.0], [42.5, 2637.0], [42.6, 2637.0], [42.7, 2638.0], [42.8, 2638.0], [42.9, 2641.0], [43.0, 2644.0], [43.1, 2649.0], [43.2, 2649.0], [43.3, 2650.0], [43.4, 2651.0], [43.5, 2651.0], [43.6, 2652.0], [43.7, 2653.0], [43.8, 2654.0], [43.9, 2654.0], [44.0, 2655.0], [44.1, 2661.0], [44.2, 2678.0], [44.3, 2694.0], [44.4, 2698.0], [44.5, 2699.0], [44.6, 2703.0], [44.7, 2722.0], [44.8, 2736.0], [44.9, 2738.0], [45.0, 2740.0], [45.1, 2754.0], [45.2, 2762.0], [45.3, 2762.0], [45.4, 2763.0], [45.5, 2774.0], [45.6, 2776.0], [45.7, 2781.0], [45.8, 2782.0], [45.9, 2786.0], [46.0, 2789.0], [46.1, 2789.0], [46.2, 2791.0], [46.3, 2792.0], [46.4, 2795.0], [46.5, 2796.0], [46.6, 2797.0], [46.7, 2799.0], [46.8, 2801.0], [46.9, 2806.0], [47.0, 2807.0], [47.1, 2811.0], [47.2, 2813.0], [47.3, 2814.0], [47.4, 2815.0], [47.5, 2825.0], [47.6, 2828.0], [47.7, 2840.0], [47.8, 2845.0], [47.9, 2846.0], [48.0, 2849.0], [48.1, 2863.0], [48.2, 2884.0], [48.3, 2896.0], [48.4, 2899.0], [48.5, 2899.0], [48.6, 2901.0], [48.7, 2909.0], [48.8, 2926.0], [48.9, 2930.0], [49.0, 2935.0], [49.1, 2941.0], [49.2, 2943.0], [49.3, 2970.0], [49.4, 2989.0], [49.5, 3027.0], [49.6, 3057.0], [49.7, 13772.0], [49.8, 13788.0], [49.9, 13798.0], [50.0, 13854.0], [50.1, 13883.0], [50.2, 13940.0], [50.3, 13942.0], [50.4, 13964.0], [50.5, 13974.0], [50.6, 14028.0], [50.7, 14031.0], [50.8, 14040.0], [50.9, 14042.0], [51.0, 14044.0], [51.1, 14061.0], [51.2, 14064.0], [51.3, 14065.0], [51.4, 14072.0], [51.5, 14087.0], [51.6, 14101.0], [51.7, 14103.0], [51.8, 14107.0], [51.9, 14133.0], [52.0, 14406.0], [52.1, 14541.0], [52.2, 14616.0], [52.3, 14618.0], [52.4, 15412.0], [52.5, 15697.0], [52.6, 15728.0], [52.7, 15882.0], [52.8, 16060.0], [52.9, 17042.0], [53.0, 17170.0], [53.1, 17301.0], [53.2, 17466.0], [53.3, 17544.0], [53.4, 17553.0], [53.5, 17578.0], [53.6, 17613.0], [53.7, 17647.0], [53.8, 17654.0], [53.9, 17659.0], [54.0, 17686.0], [54.1, 17711.0], [54.2, 17737.0], [54.3, 17800.0], [54.4, 17984.0], [54.5, 18058.0], [54.6, 18065.0], [54.7, 18067.0], [54.8, 18069.0], [54.9, 18089.0], [55.0, 18089.0], [55.1, 18090.0], [55.2, 18092.0], [55.3, 18093.0], [55.4, 18094.0], [55.5, 18095.0], [55.6, 18096.0], [55.7, 18096.0], [55.8, 18097.0], [55.9, 18098.0], [56.0, 18099.0], [56.1, 18101.0], [56.2, 18104.0], [56.3, 18104.0], [56.4, 18105.0], [56.5, 18107.0], [56.6, 18107.0], [56.7, 18109.0], [56.8, 18111.0], [56.9, 18112.0], [57.0, 18116.0], [57.1, 18117.0], [57.2, 18118.0], [57.3, 18119.0], [57.4, 18121.0], [57.5, 18122.0], [57.6, 18122.0], [57.7, 18124.0], [57.8, 18124.0], [57.9, 18125.0], [58.0, 18127.0], [58.1, 18128.0], [58.2, 18130.0], [58.3, 18131.0], [58.4, 18133.0], [58.5, 18134.0], [58.6, 18136.0], [58.7, 18139.0], [58.8, 18139.0], [58.9, 18140.0], [59.0, 18140.0], [59.1, 18141.0], [59.2, 18144.0], [59.3, 18144.0], [59.4, 18144.0], [59.5, 18144.0], [59.6, 18144.0], [59.7, 18144.0], [59.8, 18145.0], [59.9, 18145.0], [60.0, 18146.0], [60.1, 18146.0], [60.2, 18146.0], [60.3, 18148.0], [60.4, 18148.0], [60.5, 18149.0], [60.6, 18150.0], [60.7, 18150.0], [60.8, 18150.0], [60.9, 18151.0], [61.0, 18152.0], [61.1, 18152.0], [61.2, 18153.0], [61.3, 18156.0], [61.4, 18157.0], [61.5, 18158.0], [61.6, 18161.0], [61.7, 18161.0], [61.8, 18161.0], [61.9, 18162.0], [62.0, 18163.0], [62.1, 18164.0], [62.2, 18164.0], [62.3, 18165.0], [62.4, 18168.0], [62.5, 18168.0], [62.6, 18173.0], [62.7, 18174.0], [62.8, 18178.0], [62.9, 18181.0], [63.0, 18183.0], [63.1, 18186.0], [63.2, 18193.0], [63.3, 18196.0], [63.4, 18203.0], [63.5, 18227.0], [63.6, 18228.0], [63.7, 18229.0], [63.8, 18233.0], [63.9, 18248.0], [64.0, 18264.0], [64.1, 18277.0], [64.2, 18284.0], [64.3, 18290.0], [64.4, 18305.0], [64.5, 18306.0], [64.6, 18323.0], [64.7, 18334.0], [64.8, 18338.0], [64.9, 18356.0], [65.0, 18359.0], [65.1, 18361.0], [65.2, 18381.0], [65.3, 18382.0], [65.4, 18383.0], [65.5, 18393.0], [65.6, 18393.0], [65.7, 18395.0], [65.8, 18398.0], [65.9, 18405.0], [66.0, 18410.0], [66.1, 18413.0], [66.2, 18414.0], [66.3, 18415.0], [66.4, 18419.0], [66.5, 18420.0], [66.6, 18423.0], [66.7, 18423.0], [66.8, 18427.0], [66.9, 18427.0], [67.0, 18427.0], [67.1, 18429.0], [67.2, 18435.0], [67.3, 18435.0], [67.4, 18437.0], [67.5, 18437.0], [67.6, 18438.0], [67.7, 18438.0], [67.8, 18439.0], [67.9, 18440.0], [68.0, 18441.0], [68.1, 18441.0], [68.2, 18441.0], [68.3, 18442.0], [68.4, 18442.0], [68.5, 18442.0], [68.6, 18442.0], [68.7, 18443.0], [68.8, 18443.0], [68.9, 18443.0], [69.0, 18443.0], [69.1, 18445.0], [69.2, 18445.0], [69.3, 18445.0], [69.4, 18446.0], [69.5, 18447.0], [69.6, 18447.0], [69.7, 18448.0], [69.8, 18448.0], [69.9, 18448.0], [70.0, 18449.0], [70.1, 18449.0], [70.2, 18450.0], [70.3, 18450.0], [70.4, 18450.0], [70.5, 18451.0], [70.6, 18452.0], [70.7, 18453.0], [70.8, 18453.0], [70.9, 18454.0], [71.0, 18454.0], [71.1, 18454.0], [71.2, 18454.0], [71.3, 18455.0], [71.4, 18456.0], [71.5, 18459.0], [71.6, 18460.0], [71.7, 18461.0], [71.8, 18462.0], [71.9, 18463.0], [72.0, 18464.0], [72.1, 18464.0], [72.2, 18464.0], [72.3, 18466.0], [72.4, 18467.0], [72.5, 18467.0], [72.6, 18468.0], [72.7, 18469.0], [72.8, 18469.0], [72.9, 18469.0], [73.0, 18470.0], [73.1, 18470.0], [73.2, 18471.0], [73.3, 18472.0], [73.4, 18473.0], [73.5, 18475.0], [73.6, 18475.0], [73.7, 18476.0], [73.8, 18476.0], [73.9, 18476.0], [74.0, 18479.0], [74.1, 18480.0], [74.2, 18480.0], [74.3, 18480.0], [74.4, 18481.0], [74.5, 18481.0], [74.6, 18481.0], [74.7, 18483.0], [74.8, 18483.0], [74.9, 18483.0], [75.0, 18484.0], [75.1, 18485.0], [75.2, 18488.0], [75.3, 18491.0], [75.4, 18492.0], [75.5, 18493.0], [75.6, 18495.0], [75.7, 18495.0], [75.8, 18496.0], [75.9, 18497.0], [76.0, 18499.0], [76.1, 18500.0], [76.2, 18500.0], [76.3, 18500.0], [76.4, 18501.0], [76.5, 18504.0], [76.6, 18507.0], [76.7, 18507.0], [76.8, 18514.0], [76.9, 18517.0], [77.0, 18521.0], [77.1, 18522.0], [77.2, 18524.0], [77.3, 18531.0], [77.4, 18531.0], [77.5, 18532.0], [77.6, 18538.0], [77.7, 18543.0], [77.8, 18551.0], [77.9, 18552.0], [78.0, 18555.0], [78.1, 18556.0], [78.2, 18558.0], [78.3, 18564.0], [78.4, 18574.0], [78.5, 18581.0], [78.6, 18590.0], [78.7, 18592.0], [78.8, 18595.0], [78.9, 18596.0], [79.0, 18597.0], [79.1, 18599.0], [79.2, 18602.0], [79.3, 18602.0], [79.4, 18605.0], [79.5, 18606.0], [79.6, 18606.0], [79.7, 18607.0], [79.8, 18607.0], [79.9, 18607.0], [80.0, 18611.0], [80.1, 18611.0], [80.2, 18611.0], [80.3, 18611.0], [80.4, 18612.0], [80.5, 18614.0], [80.6, 18614.0], [80.7, 18614.0], [80.8, 18615.0], [80.9, 18616.0], [81.0, 18617.0], [81.1, 18617.0], [81.2, 18617.0], [81.3, 18617.0], [81.4, 18618.0], [81.5, 18618.0], [81.6, 18621.0], [81.7, 18621.0], [81.8, 18622.0], [81.9, 18625.0], [82.0, 18626.0], [82.1, 18629.0], [82.2, 18632.0], [82.3, 18635.0], [82.4, 18635.0], [82.5, 18636.0], [82.6, 18636.0], [82.7, 18636.0], [82.8, 18636.0], [82.9, 18637.0], [83.0, 18640.0], [83.1, 18644.0], [83.2, 18645.0], [83.3, 18645.0], [83.4, 18646.0], [83.5, 18649.0], [83.6, 18649.0], [83.7, 18649.0], [83.8, 18652.0], [83.9, 18652.0], [84.0, 18652.0], [84.1, 18653.0], [84.2, 18653.0], [84.3, 18655.0], [84.4, 18656.0], [84.5, 18657.0], [84.6, 18660.0], [84.7, 18660.0], [84.8, 18661.0], [84.9, 18663.0], [85.0, 18664.0], [85.1, 18664.0], [85.2, 18669.0], [85.3, 18672.0], [85.4, 18673.0], [85.5, 18674.0], [85.6, 18674.0], [85.7, 18674.0], [85.8, 18675.0], [85.9, 18676.0], [86.0, 18677.0], [86.1, 18678.0], [86.2, 18678.0], [86.3, 18680.0], [86.4, 18680.0], [86.5, 18688.0], [86.6, 18694.0], [86.7, 18718.0], [86.8, 18720.0], [86.9, 18721.0], [87.0, 18722.0], [87.1, 18724.0], [87.2, 18724.0], [87.3, 18724.0], [87.4, 18724.0], [87.5, 18726.0], [87.6, 18727.0], [87.7, 18728.0], [87.8, 18729.0], [87.9, 18731.0], [88.0, 18733.0], [88.1, 18733.0], [88.2, 18735.0], [88.3, 18736.0], [88.4, 18736.0], [88.5, 18738.0], [88.6, 18738.0], [88.7, 18742.0], [88.8, 18744.0], [88.9, 18745.0], [89.0, 18746.0], [89.1, 18748.0], [89.2, 18750.0], [89.3, 18750.0], [89.4, 18751.0], [89.5, 18751.0], [89.6, 18753.0], [89.7, 18754.0], [89.8, 18756.0], [89.9, 18757.0], [90.0, 18757.0], [90.1, 18758.0], [90.2, 18759.0], [90.3, 18762.0], [90.4, 18762.0], [90.5, 18763.0], [90.6, 18763.0], [90.7, 18764.0], [90.8, 18765.0], [90.9, 18765.0], [91.0, 18766.0], [91.1, 18766.0], [91.2, 18766.0], [91.3, 18767.0], [91.4, 18769.0], [91.5, 18770.0], [91.6, 18772.0], [91.7, 18772.0], [91.8, 18796.0], [91.9, 18828.0], [92.0, 18857.0], [92.1, 18889.0], [92.2, 18958.0], [92.3, 18960.0], [92.4, 18989.0], [92.5, 19022.0], [92.6, 19047.0], [92.7, 19067.0], [92.8, 19107.0], [92.9, 19134.0], [93.0, 19157.0], [93.1, 19187.0], [93.2, 19215.0], [93.3, 19254.0], [93.4, 19263.0], [93.5, 19336.0], [93.6, 19341.0], [93.7, 19374.0], [93.8, 19402.0], [93.9, 19427.0], [94.0, 19437.0], [94.1, 19470.0], [94.2, 19485.0], [94.3, 19528.0], [94.4, 19552.0], [94.5, 19587.0], [94.6, 19620.0], [94.7, 19642.0], [94.8, 19674.0], [94.9, 19702.0], [95.0, 19760.0], [95.1, 19795.0], [95.2, 19795.0], [95.3, 19834.0], [95.4, 19865.0], [95.5, 19886.0], [95.6, 19911.0], [95.7, 19952.0], [95.8, 19977.0], [95.9, 20039.0], [96.0, 20047.0], [96.1, 20073.0], [96.2, 20102.0], [96.3, 20138.0], [96.4, 20165.0], [96.5, 20199.0], [96.6, 20227.0], [96.7, 20256.0], [96.8, 20285.0], [96.9, 20316.0], [97.0, 20343.0], [97.1, 20376.0], [97.2, 20419.0], [97.3, 20440.0], [97.4, 20471.0], [97.5, 20495.0], [97.6, 20526.0], [97.7, 20564.0], [97.8, 20622.0], [97.9, 20625.0], [98.0, 20654.0], [98.1, 20683.0], [98.2, 20709.0], [98.3, 20737.0], [98.4, 20786.0], [98.5, 20801.0], [98.6, 20803.0], [98.7, 20840.0], [98.8, 20858.0], [98.9, 20892.0], [99.0, 20922.0], [99.1, 20934.0], [99.2, 20953.0], [99.3, 20978.0], [99.4, 21026.0], [99.5, 21116.0], [99.6, 21144.0], [99.7, 21153.0], [99.8, 21182.0], [99.9, 21209.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 2115.0], [0.1, 2119.0], [0.2, 2119.0], [0.3, 2119.0], [0.4, 2122.0], [0.5, 2123.0], [0.6, 2139.0], [0.7, 2157.0], [0.8, 2176.0], [0.9, 2269.0], [1.0, 2269.0], [1.1, 2269.0], [1.2, 2269.0], [1.3, 2269.0], [1.4, 2270.0], [1.5, 2271.0], [1.6, 2271.0], [1.7, 2272.0], [1.8, 2272.0], [1.9, 2272.0], [2.0, 2273.0], [2.1, 2273.0], [2.2, 2274.0], [2.3, 2274.0], [2.4, 2274.0], [2.5, 2274.0], [2.6, 2275.0], [2.7, 2275.0], [2.8, 2275.0], [2.9, 2276.0], [3.0, 2276.0], [3.1, 2276.0], [3.2, 2276.0], [3.3, 2276.0], [3.4, 2276.0], [3.5, 2276.0], [3.6, 2276.0], [3.7, 2276.0], [3.8, 2276.0], [3.9, 2277.0], [4.0, 2277.0], [4.1, 2277.0], [4.2, 2277.0], [4.3, 2277.0], [4.4, 2277.0], [4.5, 2277.0], [4.6, 2277.0], [4.7, 2277.0], [4.8, 2278.0], [4.9, 2278.0], [5.0, 2278.0], [5.1, 2278.0], [5.2, 2278.0], [5.3, 2278.0], [5.4, 2278.0], [5.5, 2279.0], [5.6, 2279.0], [5.7, 2279.0], [5.8, 2279.0], [5.9, 2279.0], [6.0, 2279.0], [6.1, 2279.0], [6.2, 2279.0], [6.3, 2279.0], [6.4, 2279.0], [6.5, 2279.0], [6.6, 2279.0], [6.7, 2279.0], [6.8, 2280.0], [6.9, 2280.0], [7.0, 2280.0], [7.1, 2280.0], [7.2, 2280.0], [7.3, 2280.0], [7.4, 2280.0], [7.5, 2281.0], [7.6, 2281.0], [7.7, 2282.0], [7.8, 2282.0], [7.9, 2282.0], [8.0, 2282.0], [8.1, 2282.0], [8.2, 2282.0], [8.3, 2282.0], [8.4, 2283.0], [8.5, 2283.0], [8.6, 2283.0], [8.7, 2283.0], [8.8, 2285.0], [8.9, 2285.0], [9.0, 2285.0], [9.1, 2285.0], [9.2, 2285.0], [9.3, 2286.0], [9.4, 2286.0], [9.5, 2286.0], [9.6, 2286.0], [9.7, 2286.0], [9.8, 2286.0], [9.9, 2286.0], [10.0, 2286.0], [10.1, 2286.0], [10.2, 2287.0], [10.3, 2287.0], [10.4, 2287.0], [10.5, 2288.0], [10.6, 2289.0], [10.7, 2289.0], [10.8, 2289.0], [10.9, 2290.0], [11.0, 2290.0], [11.1, 2290.0], [11.2, 2290.0], [11.3, 2290.0], [11.4, 2290.0], [11.5, 2290.0], [11.6, 2290.0], [11.7, 2290.0], [11.8, 2291.0], [11.9, 2291.0], [12.0, 2291.0], [12.1, 2291.0], [12.2, 2291.0], [12.3, 2291.0], [12.4, 2292.0], [12.5, 2293.0], [12.6, 2294.0], [12.7, 2294.0], [12.8, 2296.0], [12.9, 2296.0], [13.0, 2297.0], [13.1, 2298.0], [13.2, 2298.0], [13.3, 2298.0], [13.4, 2299.0], [13.5, 2299.0], [13.6, 2299.0], [13.7, 2299.0], [13.8, 2300.0], [13.9, 2300.0], [14.0, 2300.0], [14.1, 2300.0], [14.2, 2301.0], [14.3, 2301.0], [14.4, 2301.0], [14.5, 2301.0], [14.6, 2302.0], [14.7, 2302.0], [14.8, 2302.0], [14.9, 2303.0], [15.0, 2303.0], [15.1, 2303.0], [15.2, 2304.0], [15.3, 2304.0], [15.4, 2305.0], [15.5, 2305.0], [15.6, 2306.0], [15.7, 2306.0], [15.8, 2306.0], [15.9, 2307.0], [16.0, 2307.0], [16.1, 2308.0], [16.2, 2309.0], [16.3, 2309.0], [16.4, 2309.0], [16.5, 2309.0], [16.6, 2309.0], [16.7, 2310.0], [16.8, 2310.0], [16.9, 2310.0], [17.0, 2310.0], [17.1, 2310.0], [17.2, 2311.0], [17.3, 2312.0], [17.4, 2313.0], [17.5, 2313.0], [17.6, 2313.0], [17.7, 2313.0], [17.8, 2314.0], [17.9, 2314.0], [18.0, 2314.0], [18.1, 2314.0], [18.2, 2315.0], [18.3, 2315.0], [18.4, 2315.0], [18.5, 2315.0], [18.6, 2315.0], [18.7, 2316.0], [18.8, 2316.0], [18.9, 2316.0], [19.0, 2317.0], [19.1, 2317.0], [19.2, 2317.0], [19.3, 2318.0], [19.4, 2318.0], [19.5, 2318.0], [19.6, 2319.0], [19.7, 2319.0], [19.8, 2319.0], [19.9, 2319.0], [20.0, 2319.0], [20.1, 2319.0], [20.2, 2319.0], [20.3, 2319.0], [20.4, 2319.0], [20.5, 2319.0], [20.6, 2320.0], [20.7, 2320.0], [20.8, 2320.0], [20.9, 2320.0], [21.0, 2321.0], [21.1, 2321.0], [21.2, 2321.0], [21.3, 2321.0], [21.4, 2321.0], [21.5, 2321.0], [21.6, 2322.0], [21.7, 2322.0], [21.8, 2322.0], [21.9, 2322.0], [22.0, 2322.0], [22.1, 2323.0], [22.2, 2323.0], [22.3, 2323.0], [22.4, 2323.0], [22.5, 2323.0], [22.6, 2324.0], [22.7, 2324.0], [22.8, 2324.0], [22.9, 2324.0], [23.0, 2324.0], [23.1, 2325.0], [23.2, 2325.0], [23.3, 2325.0], [23.4, 2325.0], [23.5, 2325.0], [23.6, 2326.0], [23.7, 2326.0], [23.8, 2327.0], [23.9, 2328.0], [24.0, 2329.0], [24.1, 2329.0], [24.2, 2330.0], [24.3, 2330.0], [24.4, 2331.0], [24.5, 2331.0], [24.6, 2331.0], [24.7, 2332.0], [24.8, 2332.0], [24.9, 2333.0], [25.0, 2333.0], [25.1, 2333.0], [25.2, 2333.0], [25.3, 2333.0], [25.4, 2334.0], [25.5, 2334.0], [25.6, 2334.0], [25.7, 2334.0], [25.8, 2334.0], [25.9, 2334.0], [26.0, 2334.0], [26.1, 2335.0], [26.2, 2335.0], [26.3, 2335.0], [26.4, 2335.0], [26.5, 2335.0], [26.6, 2336.0], [26.7, 2337.0], [26.8, 2337.0], [26.9, 2337.0], [27.0, 2337.0], [27.1, 2338.0], [27.2, 2338.0], [27.3, 2339.0], [27.4, 2339.0], [27.5, 2340.0], [27.6, 2340.0], [27.7, 2340.0], [27.8, 2341.0], [27.9, 2341.0], [28.0, 2341.0], [28.1, 2341.0], [28.2, 2342.0], [28.3, 2343.0], [28.4, 2343.0], [28.5, 2344.0], [28.6, 2345.0], [28.7, 2345.0], [28.8, 2346.0], [28.9, 2348.0], [29.0, 2349.0], [29.1, 2349.0], [29.2, 2350.0], [29.3, 2350.0], [29.4, 2351.0], [29.5, 2351.0], [29.6, 2351.0], [29.7, 2352.0], [29.8, 2352.0], [29.9, 2352.0], [30.0, 2353.0], [30.1, 2354.0], [30.2, 2354.0], [30.3, 2355.0], [30.4, 2355.0], [30.5, 2356.0], [30.6, 2356.0], [30.7, 2356.0], [30.8, 2356.0], [30.9, 2357.0], [31.0, 2357.0], [31.1, 2359.0], [31.2, 2359.0], [31.3, 2359.0], [31.4, 2359.0], [31.5, 2360.0], [31.6, 2360.0], [31.7, 2360.0], [31.8, 2360.0], [31.9, 2361.0], [32.0, 2361.0], [32.1, 2362.0], [32.2, 2362.0], [32.3, 2362.0], [32.4, 2362.0], [32.5, 2362.0], [32.6, 2363.0], [32.7, 2363.0], [32.8, 2363.0], [32.9, 2363.0], [33.0, 2364.0], [33.1, 2364.0], [33.2, 2364.0], [33.3, 2364.0], [33.4, 2364.0], [33.5, 2365.0], [33.6, 2366.0], [33.7, 2366.0], [33.8, 2366.0], [33.9, 2367.0], [34.0, 2367.0], [34.1, 2367.0], [34.2, 2367.0], [34.3, 2367.0], [34.4, 2371.0], [34.5, 2373.0], [34.6, 2376.0], [34.7, 2378.0], [34.8, 2378.0], [34.9, 2381.0], [35.0, 2381.0], [35.1, 2382.0], [35.2, 2383.0], [35.3, 2420.0], [35.4, 2422.0], [35.5, 2425.0], [35.6, 2435.0], [35.7, 2436.0], [35.8, 2439.0], [35.9, 2440.0], [36.0, 2444.0], [36.1, 2445.0], [36.2, 2445.0], [36.3, 2448.0], [36.4, 2449.0], [36.5, 2455.0], [36.6, 2467.0], [36.7, 2470.0], [36.8, 2475.0], [36.9, 2475.0], [37.0, 2480.0], [37.1, 2481.0], [37.2, 2491.0], [37.3, 2574.0], [37.4, 2575.0], [37.5, 2575.0], [37.6, 2576.0], [37.7, 2576.0], [37.8, 2577.0], [37.9, 2579.0], [38.0, 2580.0], [38.1, 2581.0], [38.2, 2584.0], [38.3, 2592.0], [38.4, 2593.0], [38.5, 2597.0], [38.6, 2599.0], [38.7, 2599.0], [38.8, 2600.0], [38.9, 2604.0], [39.0, 2604.0], [39.1, 2605.0], [39.2, 2605.0], [39.3, 2607.0], [39.4, 2608.0], [39.5, 2612.0], [39.6, 2614.0], [39.7, 2614.0], [39.8, 2615.0], [39.9, 2616.0], [40.0, 2617.0], [40.1, 2619.0], [40.2, 2620.0], [40.3, 2622.0], [40.4, 2623.0], [40.5, 2624.0], [40.6, 2624.0], [40.7, 2625.0], [40.8, 2625.0], [40.9, 2627.0], [41.0, 2627.0], [41.1, 2627.0], [41.2, 2627.0], [41.3, 2629.0], [41.4, 2629.0], [41.5, 2630.0], [41.6, 2630.0], [41.7, 2630.0], [41.8, 2630.0], [41.9, 2632.0], [42.0, 2632.0], [42.1, 2633.0], [42.2, 2634.0], [42.3, 2635.0], [42.4, 2637.0], [42.5, 2637.0], [42.6, 2637.0], [42.7, 2638.0], [42.8, 2638.0], [42.9, 2641.0], [43.0, 2644.0], [43.1, 2649.0], [43.2, 2649.0], [43.3, 2650.0], [43.4, 2651.0], [43.5, 2651.0], [43.6, 2652.0], [43.7, 2653.0], [43.8, 2654.0], [43.9, 2654.0], [44.0, 2655.0], [44.1, 2661.0], [44.2, 2678.0], [44.3, 2694.0], [44.4, 2698.0], [44.5, 2699.0], [44.6, 2703.0], [44.7, 2722.0], [44.8, 2736.0], [44.9, 2738.0], [45.0, 2740.0], [45.1, 2754.0], [45.2, 2762.0], [45.3, 2762.0], [45.4, 2763.0], [45.5, 2774.0], [45.6, 2776.0], [45.7, 2781.0], [45.8, 2782.0], [45.9, 2786.0], [46.0, 2789.0], [46.1, 2789.0], [46.2, 2791.0], [46.3, 2792.0], [46.4, 2795.0], [46.5, 2796.0], [46.6, 2797.0], [46.7, 2799.0], [46.8, 2801.0], [46.9, 2806.0], [47.0, 2807.0], [47.1, 2811.0], [47.2, 2813.0], [47.3, 2814.0], [47.4, 2815.0], [47.5, 2825.0], [47.6, 2828.0], [47.7, 2840.0], [47.8, 2845.0], [47.9, 2846.0], [48.0, 2849.0], [48.1, 2863.0], [48.2, 2884.0], [48.3, 2896.0], [48.4, 2899.0], [48.5, 2899.0], [48.6, 2901.0], [48.7, 2909.0], [48.8, 2926.0], [48.9, 2930.0], [49.0, 2935.0], [49.1, 2941.0], [49.2, 2943.0], [49.3, 2970.0], [49.4, 2989.0], [49.5, 3027.0], [49.6, 3057.0], [49.7, 13772.0], [49.8, 13788.0], [49.9, 13798.0], [50.0, 13854.0], [50.1, 13883.0], [50.2, 13940.0], [50.3, 13942.0], [50.4, 13964.0], [50.5, 13974.0], [50.6, 14028.0], [50.7, 14031.0], [50.8, 14040.0], [50.9, 14042.0], [51.0, 14044.0], [51.1, 14061.0], [51.2, 14064.0], [51.3, 14065.0], [51.4, 14072.0], [51.5, 14087.0], [51.6, 14101.0], [51.7, 14103.0], [51.8, 14107.0], [51.9, 14133.0], [52.0, 14406.0], [52.1, 14541.0], [52.2, 14616.0], [52.3, 14618.0], [52.4, 15412.0], [52.5, 15697.0], [52.6, 15728.0], [52.7, 15882.0], [52.8, 16060.0], [52.9, 17042.0], [53.0, 17170.0], [53.1, 17301.0], [53.2, 17466.0], [53.3, 17544.0], [53.4, 17553.0], [53.5, 17578.0], [53.6, 17613.0], [53.7, 17647.0], [53.8, 17654.0], [53.9, 17659.0], [54.0, 17686.0], [54.1, 17711.0], [54.2, 17737.0], [54.3, 17800.0], [54.4, 17984.0], [54.5, 18058.0], [54.6, 18065.0], [54.7, 18067.0], [54.8, 18069.0], [54.9, 18089.0], [55.0, 18089.0], [55.1, 18090.0], [55.2, 18092.0], [55.3, 18093.0], [55.4, 18094.0], [55.5, 18095.0], [55.6, 18096.0], [55.7, 18096.0], [55.8, 18097.0], [55.9, 18098.0], [56.0, 18099.0], [56.1, 18101.0], [56.2, 18104.0], [56.3, 18104.0], [56.4, 18105.0], [56.5, 18107.0], [56.6, 18107.0], [56.7, 18109.0], [56.8, 18111.0], [56.9, 18112.0], [57.0, 18116.0], [57.1, 18117.0], [57.2, 18118.0], [57.3, 18119.0], [57.4, 18121.0], [57.5, 18122.0], [57.6, 18122.0], [57.7, 18124.0], [57.8, 18124.0], [57.9, 18125.0], [58.0, 18127.0], [58.1, 18128.0], [58.2, 18130.0], [58.3, 18131.0], [58.4, 18133.0], [58.5, 18134.0], [58.6, 18136.0], [58.7, 18139.0], [58.8, 18139.0], [58.9, 18140.0], [59.0, 18140.0], [59.1, 18141.0], [59.2, 18144.0], [59.3, 18144.0], [59.4, 18144.0], [59.5, 18144.0], [59.6, 18144.0], [59.7, 18144.0], [59.8, 18145.0], [59.9, 18145.0], [60.0, 18146.0], [60.1, 18146.0], [60.2, 18146.0], [60.3, 18148.0], [60.4, 18148.0], [60.5, 18149.0], [60.6, 18150.0], [60.7, 18150.0], [60.8, 18150.0], [60.9, 18151.0], [61.0, 18152.0], [61.1, 18152.0], [61.2, 18153.0], [61.3, 18156.0], [61.4, 18157.0], [61.5, 18158.0], [61.6, 18161.0], [61.7, 18161.0], [61.8, 18161.0], [61.9, 18162.0], [62.0, 18163.0], [62.1, 18164.0], [62.2, 18164.0], [62.3, 18165.0], [62.4, 18168.0], [62.5, 18168.0], [62.6, 18173.0], [62.7, 18174.0], [62.8, 18178.0], [62.9, 18181.0], [63.0, 18183.0], [63.1, 18186.0], [63.2, 18193.0], [63.3, 18196.0], [63.4, 18203.0], [63.5, 18227.0], [63.6, 18228.0], [63.7, 18229.0], [63.8, 18233.0], [63.9, 18248.0], [64.0, 18264.0], [64.1, 18277.0], [64.2, 18284.0], [64.3, 18290.0], [64.4, 18305.0], [64.5, 18306.0], [64.6, 18323.0], [64.7, 18334.0], [64.8, 18338.0], [64.9, 18356.0], [65.0, 18359.0], [65.1, 18361.0], [65.2, 18381.0], [65.3, 18382.0], [65.4, 18383.0], [65.5, 18393.0], [65.6, 18393.0], [65.7, 18395.0], [65.8, 18398.0], [65.9, 18405.0], [66.0, 18410.0], [66.1, 18413.0], [66.2, 18414.0], [66.3, 18415.0], [66.4, 18419.0], [66.5, 18420.0], [66.6, 18423.0], [66.7, 18423.0], [66.8, 18427.0], [66.9, 18427.0], [67.0, 18427.0], [67.1, 18429.0], [67.2, 18435.0], [67.3, 18435.0], [67.4, 18437.0], [67.5, 18437.0], [67.6, 18438.0], [67.7, 18438.0], [67.8, 18439.0], [67.9, 18440.0], [68.0, 18441.0], [68.1, 18441.0], [68.2, 18441.0], [68.3, 18442.0], [68.4, 18442.0], [68.5, 18442.0], [68.6, 18442.0], [68.7, 18443.0], [68.8, 18443.0], [68.9, 18443.0], [69.0, 18443.0], [69.1, 18445.0], [69.2, 18445.0], [69.3, 18445.0], [69.4, 18446.0], [69.5, 18447.0], [69.6, 18447.0], [69.7, 18448.0], [69.8, 18448.0], [69.9, 18448.0], [70.0, 18449.0], [70.1, 18449.0], [70.2, 18450.0], [70.3, 18450.0], [70.4, 18450.0], [70.5, 18451.0], [70.6, 18452.0], [70.7, 18453.0], [70.8, 18453.0], [70.9, 18454.0], [71.0, 18454.0], [71.1, 18454.0], [71.2, 18454.0], [71.3, 18455.0], [71.4, 18456.0], [71.5, 18459.0], [71.6, 18460.0], [71.7, 18461.0], [71.8, 18462.0], [71.9, 18463.0], [72.0, 18464.0], [72.1, 18464.0], [72.2, 18464.0], [72.3, 18466.0], [72.4, 18467.0], [72.5, 18467.0], [72.6, 18468.0], [72.7, 18469.0], [72.8, 18469.0], [72.9, 18469.0], [73.0, 18470.0], [73.1, 18470.0], [73.2, 18471.0], [73.3, 18472.0], [73.4, 18473.0], [73.5, 18475.0], [73.6, 18475.0], [73.7, 18476.0], [73.8, 18476.0], [73.9, 18476.0], [74.0, 18479.0], [74.1, 18480.0], [74.2, 18480.0], [74.3, 18480.0], [74.4, 18481.0], [74.5, 18481.0], [74.6, 18481.0], [74.7, 18483.0], [74.8, 18483.0], [74.9, 18483.0], [75.0, 18484.0], [75.1, 18485.0], [75.2, 18488.0], [75.3, 18491.0], [75.4, 18492.0], [75.5, 18493.0], [75.6, 18495.0], [75.7, 18495.0], [75.8, 18496.0], [75.9, 18497.0], [76.0, 18499.0], [76.1, 18500.0], [76.2, 18500.0], [76.3, 18500.0], [76.4, 18501.0], [76.5, 18504.0], [76.6, 18507.0], [76.7, 18507.0], [76.8, 18514.0], [76.9, 18517.0], [77.0, 18521.0], [77.1, 18522.0], [77.2, 18524.0], [77.3, 18531.0], [77.4, 18531.0], [77.5, 18532.0], [77.6, 18538.0], [77.7, 18543.0], [77.8, 18551.0], [77.9, 18552.0], [78.0, 18555.0], [78.1, 18556.0], [78.2, 18558.0], [78.3, 18564.0], [78.4, 18574.0], [78.5, 18581.0], [78.6, 18590.0], [78.7, 18592.0], [78.8, 18595.0], [78.9, 18596.0], [79.0, 18597.0], [79.1, 18599.0], [79.2, 18602.0], [79.3, 18602.0], [79.4, 18605.0], [79.5, 18606.0], [79.6, 18606.0], [79.7, 18607.0], [79.8, 18607.0], [79.9, 18607.0], [80.0, 18611.0], [80.1, 18611.0], [80.2, 18611.0], [80.3, 18611.0], [80.4, 18612.0], [80.5, 18614.0], [80.6, 18614.0], [80.7, 18614.0], [80.8, 18615.0], [80.9, 18616.0], [81.0, 18617.0], [81.1, 18617.0], [81.2, 18617.0], [81.3, 18617.0], [81.4, 18618.0], [81.5, 18618.0], [81.6, 18621.0], [81.7, 18621.0], [81.8, 18622.0], [81.9, 18625.0], [82.0, 18626.0], [82.1, 18629.0], [82.2, 18632.0], [82.3, 18635.0], [82.4, 18635.0], [82.5, 18636.0], [82.6, 18636.0], [82.7, 18636.0], [82.8, 18636.0], [82.9, 18637.0], [83.0, 18640.0], [83.1, 18644.0], [83.2, 18645.0], [83.3, 18645.0], [83.4, 18646.0], [83.5, 18649.0], [83.6, 18649.0], [83.7, 18649.0], [83.8, 18652.0], [83.9, 18652.0], [84.0, 18652.0], [84.1, 18653.0], [84.2, 18653.0], [84.3, 18655.0], [84.4, 18656.0], [84.5, 18657.0], [84.6, 18660.0], [84.7, 18660.0], [84.8, 18661.0], [84.9, 18663.0], [85.0, 18664.0], [85.1, 18664.0], [85.2, 18669.0], [85.3, 18672.0], [85.4, 18673.0], [85.5, 18674.0], [85.6, 18674.0], [85.7, 18674.0], [85.8, 18675.0], [85.9, 18676.0], [86.0, 18677.0], [86.1, 18678.0], [86.2, 18678.0], [86.3, 18680.0], [86.4, 18680.0], [86.5, 18688.0], [86.6, 18694.0], [86.7, 18718.0], [86.8, 18720.0], [86.9, 18721.0], [87.0, 18722.0], [87.1, 18724.0], [87.2, 18724.0], [87.3, 18724.0], [87.4, 18724.0], [87.5, 18726.0], [87.6, 18727.0], [87.7, 18728.0], [87.8, 18729.0], [87.9, 18731.0], [88.0, 18733.0], [88.1, 18733.0], [88.2, 18735.0], [88.3, 18736.0], [88.4, 18736.0], [88.5, 18738.0], [88.6, 18738.0], [88.7, 18742.0], [88.8, 18744.0], [88.9, 18745.0], [89.0, 18746.0], [89.1, 18748.0], [89.2, 18750.0], [89.3, 18750.0], [89.4, 18751.0], [89.5, 18751.0], [89.6, 18753.0], [89.7, 18754.0], [89.8, 18756.0], [89.9, 18757.0], [90.0, 18757.0], [90.1, 18758.0], [90.2, 18759.0], [90.3, 18762.0], [90.4, 18762.0], [90.5, 18763.0], [90.6, 18763.0], [90.7, 18764.0], [90.8, 18765.0], [90.9, 18765.0], [91.0, 18766.0], [91.1, 18766.0], [91.2, 18766.0], [91.3, 18767.0], [91.4, 18769.0], [91.5, 18770.0], [91.6, 18772.0], [91.7, 18772.0], [91.8, 18796.0], [91.9, 18828.0], [92.0, 18857.0], [92.1, 18889.0], [92.2, 18958.0], [92.3, 18960.0], [92.4, 18989.0], [92.5, 19022.0], [92.6, 19047.0], [92.7, 19067.0], [92.8, 19107.0], [92.9, 19134.0], [93.0, 19157.0], [93.1, 19187.0], [93.2, 19215.0], [93.3, 19254.0], [93.4, 19263.0], [93.5, 19336.0], [93.6, 19341.0], [93.7, 19374.0], [93.8, 19402.0], [93.9, 19427.0], [94.0, 19437.0], [94.1, 19470.0], [94.2, 19485.0], [94.3, 19528.0], [94.4, 19552.0], [94.5, 19587.0], [94.6, 19620.0], [94.7, 19642.0], [94.8, 19674.0], [94.9, 19702.0], [95.0, 19760.0], [95.1, 19795.0], [95.2, 19795.0], [95.3, 19834.0], [95.4, 19865.0], [95.5, 19886.0], [95.6, 19911.0], [95.7, 19952.0], [95.8, 19977.0], [95.9, 20039.0], [96.0, 20047.0], [96.1, 20073.0], [96.2, 20102.0], [96.3, 20138.0], [96.4, 20165.0], [96.5, 20199.0], [96.6, 20227.0], [96.7, 20256.0], [96.8, 20285.0], [96.9, 20316.0], [97.0, 20343.0], [97.1, 20376.0], [97.2, 20419.0], [97.3, 20440.0], [97.4, 20471.0], [97.5, 20495.0], [97.6, 20526.0], [97.7, 20564.0], [97.8, 20622.0], [97.9, 20625.0], [98.0, 20654.0], [98.1, 20683.0], [98.2, 20709.0], [98.3, 20737.0], [98.4, 20786.0], [98.5, 20801.0], [98.6, 20803.0], [98.7, 20840.0], [98.8, 20858.0], [98.9, 20892.0], [99.0, 20922.0], [99.1, 20934.0], [99.2, 20953.0], [99.3, 20978.0], [99.4, 21026.0], [99.5, 21116.0], [99.6, 21144.0], [99.7, 21153.0], [99.8, 21182.0], [99.9, 21209.0]], "isOverall": false, "label": "Test Fragment", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 2100.0, "maxY": 214.0, "series": [{"data": [[2100.0, 9.0], [2200.0, 129.0], [2300.0, 214.0], [2400.0, 20.0], [2500.0, 15.0], [2600.0, 58.0], [2700.0, 22.0], [2800.0, 18.0], [2900.0, 9.0], [3000.0, 2.0], [13700.0, 3.0], [13800.0, 2.0], [13900.0, 4.0], [14100.0, 4.0], [14000.0, 10.0], [14400.0, 1.0], [14500.0, 1.0], [14600.0, 2.0], [15400.0, 1.0], [15700.0, 1.0], [15600.0, 1.0], [15800.0, 1.0], [16000.0, 1.0], [17000.0, 1.0], [17100.0, 1.0], [17300.0, 1.0], [17400.0, 1.0], [18200.0, 10.0], [17500.0, 3.0], [17700.0, 2.0], [17600.0, 5.0], [17800.0, 1.0], [17900.0, 1.0], [18000.0, 16.0], [18100.0, 73.0], [18300.0, 15.0], [18400.0, 102.0], [19200.0, 3.0], [18500.0, 32.0], [18600.0, 75.0], [18700.0, 52.0], [18800.0, 3.0], [18900.0, 3.0], [19000.0, 3.0], [19100.0, 4.0], [19300.0, 3.0], [19400.0, 5.0], [19600.0, 3.0], [19500.0, 3.0], [19700.0, 4.0], [19800.0, 3.0], [19900.0, 3.0], [20000.0, 3.0], [20100.0, 4.0], [20200.0, 3.0], [20300.0, 3.0], [20400.0, 4.0], [20500.0, 2.0], [20600.0, 4.0], [20700.0, 3.0], [20800.0, 5.0], [20900.0, 4.0], [21000.0, 1.0], [21100.0, 4.0], [21200.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[2100.0, 9.0], [2200.0, 129.0], [2300.0, 214.0], [2400.0, 20.0], [2500.0, 15.0], [2600.0, 58.0], [2700.0, 22.0], [2800.0, 18.0], [2900.0, 9.0], [3000.0, 2.0], [13700.0, 3.0], [13800.0, 2.0], [13900.0, 4.0], [14100.0, 4.0], [14000.0, 10.0], [14400.0, 1.0], [14500.0, 1.0], [14600.0, 2.0], [15400.0, 1.0], [15700.0, 1.0], [15600.0, 1.0], [15800.0, 1.0], [16000.0, 1.0], [17000.0, 1.0], [17100.0, 1.0], [17300.0, 1.0], [17400.0, 1.0], [18200.0, 10.0], [17500.0, 3.0], [17700.0, 2.0], [17600.0, 5.0], [17800.0, 1.0], [17900.0, 1.0], [18000.0, 16.0], [18100.0, 73.0], [18300.0, 15.0], [18400.0, 102.0], [19200.0, 3.0], [18500.0, 32.0], [18600.0, 75.0], [18700.0, 52.0], [18800.0, 3.0], [18900.0, 3.0], [19000.0, 3.0], [19100.0, 4.0], [19300.0, 3.0], [19400.0, 5.0], [19600.0, 3.0], [19500.0, 3.0], [19700.0, 4.0], [19800.0, 3.0], [19900.0, 3.0], [20000.0, 3.0], [20100.0, 4.0], [20200.0, 3.0], [20300.0, 3.0], [20400.0, 4.0], [20500.0, 2.0], [20600.0, 4.0], [20700.0, 3.0], [20800.0, 5.0], [20900.0, 4.0], [21000.0, 1.0], [21100.0, 4.0], [21200.0, 1.0]], "isOverall": false, "label": "Test Fragment", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 496.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 504.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 504.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 496.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 501.41900000000084, "minX": 1.68041844E12, "maxY": 501.41900000000084, "series": [{"data": [[1.68041844E12, 501.41900000000084]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68041844E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2115.0, "minX": 1.0, "maxY": 21209.0, "series": [{"data": [[2.0, 21182.0], [3.0, 21153.0], [4.0, 21144.0], [5.0, 21116.0], [6.0, 20978.0], [7.0, 20953.0], [8.0, 21026.0], [9.0, 20892.0], [10.0, 20858.0], [12.0, 20928.0], [13.0, 20786.0], [14.0, 20840.0], [15.0, 20803.0], [16.0, 20801.0], [17.0, 20737.0], [18.0, 20709.0], [19.0, 20683.0], [20.0, 20654.0], [21.0, 20625.0], [22.0, 20622.0], [23.0, 20564.0], [24.0, 20526.0], [25.0, 20495.0], [26.0, 20471.0], [27.0, 20440.0], [28.0, 20419.0], [29.0, 20376.0], [30.0, 20343.0], [31.0, 20316.0], [33.0, 20256.0], [32.0, 20285.0], [35.0, 20199.0], [34.0, 20227.0], [37.0, 20138.0], [36.0, 20165.0], [39.0, 20073.0], [38.0, 20102.0], [41.0, 20039.0], [40.0, 20047.0], [43.0, 19952.0], [42.0, 19977.0], [45.0, 19886.0], [44.0, 19911.0], [47.0, 19834.0], [46.0, 19865.0], [49.0, 19795.0], [48.0, 19795.0], [51.0, 19702.0], [50.0, 19760.0], [53.0, 19642.0], [52.0, 19674.0], [55.0, 19587.0], [54.0, 19620.0], [57.0, 19528.0], [56.0, 19552.0], [59.0, 19470.0], [58.0, 19485.0], [61.0, 19437.0], [60.0, 19427.0], [63.0, 19374.0], [62.0, 19402.0], [67.0, 19254.0], [66.0, 19263.0], [65.0, 19336.0], [64.0, 19341.0], [71.0, 19134.0], [70.0, 19157.0], [69.0, 19187.0], [68.0, 19215.0], [75.0, 19022.0], [74.0, 19047.0], [73.0, 19067.0], [72.0, 19107.0], [79.0, 18889.0], [78.0, 18958.0], [77.0, 18960.0], [76.0, 18989.0], [83.0, 18772.0], [82.0, 18796.0], [81.0, 18828.0], [80.0, 18857.0], [87.0, 18770.0], [86.0, 18772.0], [85.0, 18767.0], [84.0, 18769.0], [90.0, 18766.0], [89.0, 18766.0], [88.0, 18765.0], [95.0, 18765.0], [94.0, 18762.5], [92.0, 18764.0], [98.0, 18764.0], [97.0, 18759.5], [103.0, 18754.0], [102.0, 18757.0], [101.0, 18757.0], [100.0, 18756.0], [107.0, 18745.0], [106.0, 18751.0], [105.0, 18750.0], [104.0, 18758.0], [111.0, 18747.0], [109.0, 18750.0], [108.0, 18751.0], [115.0, 18742.0], [114.0, 18736.0], [113.0, 18738.0], [112.0, 18744.0], [119.0, 18738.0], [118.0, 18736.0], [117.0, 18733.0], [116.0, 18735.0], [123.0, 18724.0], [122.0, 18733.0], [121.0, 18728.0], [120.0, 18731.0], [127.0, 18729.0], [126.0, 18724.0], [125.0, 18722.0], [124.0, 18724.0], [134.0, 18721.0], [133.0, 18680.0], [132.0, 18661.0], [131.0, 18688.0], [130.0, 18727.0], [129.0, 18726.0], [128.0, 18724.0], [143.0, 18678.0], [142.0, 18676.0], [138.0, 18656.0], [137.0, 18718.0], [136.0, 18697.5], [151.0, 18662.0], [149.0, 18664.0], [148.0, 18674.285714285714], [146.0, 18678.0], [159.0, 18649.0], [158.0, 18673.0], [157.0, 18653.0], [156.0, 18652.0], [155.0, 18657.0], [154.0, 18677.0], [153.0, 18663.0], [152.0, 18653.0], [167.0, 18660.0], [166.0, 18637.0], [165.0, 18669.0], [164.0, 18645.0], [163.0, 18645.0], [162.0, 18649.0], [160.0, 18573.0], [175.0, 18644.0], [173.0, 18635.0], [172.0, 18595.0], [171.0, 18645.5], [169.0, 18623.5], [183.0, 18531.0], [182.0, 18624.5], [178.0, 18631.5], [176.0, 18644.0], [191.0, 18613.0], [190.0, 18602.0], [188.0, 18621.0], [187.0, 18636.0], [186.0, 18635.0], [185.0, 18574.0], [184.0, 18602.0], [199.0, 18632.0], [198.0, 18606.0], [197.0, 18611.0], [196.0, 18626.0], [195.0, 18614.0], [194.0, 18629.0], [193.0, 18614.0], [192.0, 18611.0], [207.0, 18543.0], [206.0, 18617.0], [205.0, 18621.0], [204.0, 18507.0], [203.0, 18606.0], [202.0, 18617.0], [201.0, 18615.0], [200.0, 18625.0], [215.0, 18605.0], [214.0, 18607.0], [213.0, 18607.0], [212.0, 18611.0], [211.0, 18552.0], [210.0, 18504.0], [209.0, 18617.0], [208.0, 18616.0], [223.0, 18589.0], [221.0, 18596.0], [220.0, 18495.0], [219.0, 18599.0], [218.0, 18590.0], [217.0, 18558.0], [216.0, 18607.0], [231.0, 18521.0], [230.0, 18485.5], [228.0, 18481.0], [227.0, 18493.0], [226.0, 18532.0], [225.0, 18531.0], [224.0, 18592.0], [239.0, 18469.0], [238.0, 18494.5], [236.0, 18500.5], [234.0, 18481.0], [233.0, 18473.0], [232.0, 18476.0], [247.0, 18468.0], [246.0, 18564.0], [245.0, 18501.0], [244.0, 18512.5], [242.0, 18482.0], [240.0, 18471.0], [255.0, 18481.0], [254.0, 18489.5], [252.0, 18482.0], [250.0, 18453.0], [249.0, 18538.0], [248.0, 18507.0], [270.0, 18476.0], [271.0, 18475.0], [269.0, 18476.0], [268.0, 18480.0], [267.0, 18442.0], [266.0, 18483.0], [265.0, 18462.0], [264.0, 18496.0], [263.0, 18499.0], [259.0, 18509.333333333332], [256.0, 18448.0], [262.0, 18488.0], [261.0, 18468.5], [286.0, 18451.0], [287.0, 18461.0], [285.0, 18470.0], [284.0, 18464.0], [283.0, 18453.0], [281.0, 18469.0], [280.0, 18463.0], [279.0, 18497.0], [273.0, 18472.0], [272.0, 18517.0], [275.0, 18480.0], [274.0, 18485.0], [278.0, 18466.0], [277.0, 18551.0], [276.0, 18470.0], [303.0, 18445.0], [301.0, 18457.363636363636], [290.0, 18455.0], [288.0, 18467.0], [306.0, 18438.0], [317.0, 18440.333333333332], [316.0, 18483.0], [315.0, 18443.0], [313.0, 18440.0], [312.0, 18435.0], [309.0, 18439.0], [308.0, 18464.5], [305.0, 18442.0], [304.0, 18448.0], [332.0, 18423.0], [334.0, 18445.0], [335.0, 18427.0], [333.0, 18359.0], [331.0, 18424.333333333332], [328.0, 18426.0], [326.0, 18381.0], [325.0, 18445.5], [322.0, 18437.0], [321.0, 18448.0], [350.0, 18420.0], [351.0, 18410.0], [349.0, 18414.0], [348.0, 18382.0], [347.0, 18393.0], [346.0, 18323.0], [345.0, 18393.0], [344.0, 18398.0], [343.0, 18376.5], [337.0, 18384.5], [339.0, 18450.0], [338.0, 18361.0], [341.0, 18435.0], [340.0, 18438.0], [366.0, 18229.0], [367.0, 18168.0], [365.0, 18228.0], [364.0, 18248.0], [363.0, 18233.0], [362.0, 18227.0], [361.0, 18270.5], [359.0, 18305.0], [353.0, 18395.0], [352.0, 18405.0], [355.0, 18334.0], [354.0, 18383.0], [358.0, 18290.0], [357.0, 18284.0], [356.0, 18306.0], [380.0, 18145.0], [382.0, 18178.0], [383.0, 18183.0], [381.0, 18148.0], [379.0, 18145.5], [377.0, 18175.5], [375.0, 18164.0], [369.0, 18203.0], [368.0, 18193.0], [371.0, 18173.0], [370.0, 18181.0], [374.0, 18157.0], [373.0, 18144.0], [372.0, 18196.0], [396.0, 18153.5], [399.0, 18162.0], [398.0, 18140.0], [397.0, 18144.0], [394.0, 18151.333333333332], [391.0, 18144.0], [385.0, 18152.0], [384.0, 18158.0], [387.0, 18151.0], [386.0, 18161.0], [390.0, 18168.0], [389.0, 18174.0], [388.0, 18150.0], [414.0, 18141.0], [415.0, 18144.0], [413.0, 18148.0], [412.0, 18150.0], [411.0, 18146.0], [410.0, 18149.0], [409.0, 18131.0], [408.0, 18150.0], [407.0, 18154.5], [401.0, 18139.0], [406.0, 18152.0], [404.0, 18152.666666666668], [430.0, 18117.0], [431.0, 18116.0], [429.0, 18118.0], [428.0, 18121.0], [427.0, 18122.0], [426.0, 18119.0], [425.0, 18122.0], [424.0, 18124.0], [423.0, 18128.0], [416.0, 18140.0], [419.0, 18133.0], [418.0, 18132.0], [422.0, 18124.0], [421.0, 18125.0], [420.0, 18127.0], [446.0, 18096.0], [447.0, 18095.0], [445.0, 18096.0], [444.0, 18098.0], [443.0, 18099.0], [442.0, 18094.0], [441.0, 18097.0], [440.0, 18101.0], [439.0, 18104.0], [432.0, 18112.0], [435.0, 18106.0], [433.0, 18111.0], [438.0, 18104.0], [437.0, 18107.0], [436.0, 18109.0], [462.0, 17654.0], [463.0, 17647.0], [461.0, 17659.0], [460.0, 17686.0], [459.0, 17737.0], [458.0, 17800.0], [457.0, 17984.0], [456.0, 18058.0], [455.0, 18065.0], [448.0, 18092.0], [451.0, 18090.0], [450.0, 18091.0], [454.0, 18067.0], [453.0, 18069.0], [452.0, 18089.0], [478.0, 14616.0], [479.0, 14618.0], [477.0, 15412.0], [476.0, 15728.0], [475.0, 15697.0], [474.0, 15882.0], [473.0, 16060.0], [472.0, 17042.0], [471.0, 17170.0], [465.0, 17711.0], [464.0, 17613.0], [467.0, 17544.0], [466.0, 17553.0], [470.0, 17301.0], [469.0, 17466.0], [468.0, 17578.0], [494.0, 14031.0], [495.0, 14101.0], [493.0, 14028.0], [492.0, 14042.0], [491.0, 14042.0], [489.0, 14065.0], [488.0, 14061.0], [487.0, 14064.0], [481.0, 14406.0], [480.0, 14541.0], [483.0, 14107.0], [482.0, 14133.0], [486.0, 14072.0], [485.0, 14087.0], [484.0, 14103.0], [499.0, 13940.0], [509.0, 2970.0], [508.0, 2976.5], [506.0, 3023.0], [504.0, 13772.0], [503.0, 13821.0], [501.0, 13798.0], [500.0, 13883.0], [498.0, 13942.0], [497.0, 13974.0], [496.0, 13964.0], [542.0, 2802.5], [543.0, 2782.0], [538.0, 2794.5], [536.0, 2849.0], [535.0, 2806.0], [534.0, 2830.8], [529.0, 2837.1111111111113], [520.0, 2899.0], [514.0, 2919.5], [512.0, 2939.6666666666665], [517.0, 2801.5], [516.0, 2901.0], [519.0, 2814.0], [518.0, 2797.0], [574.0, 2629.0], [575.0, 2642.5], [562.0, 2655.0], [573.0, 2637.0], [572.0, 2638.0], [570.0, 2678.0], [569.0, 2650.0], [568.0, 2651.2], [549.0, 2758.0], [547.0, 2780.0], [545.0, 2762.0], [544.0, 2791.0], [558.0, 2698.5], [554.0, 2740.0], [553.0, 2739.75], [567.0, 2657.5], [564.0, 2651.5], [606.0, 2615.0], [607.0, 2614.0], [605.0, 2609.5], [603.0, 2616.0], [601.0, 2618.5], [600.0, 2614.0], [590.0, 2629.4], [577.0, 2633.5], [580.0, 2630.0], [579.0, 2637.0], [583.0, 2638.0], [581.0, 2634.0], [587.0, 2628.0], [586.0, 2630.0], [598.0, 2632.0], [596.0, 2622.0], [595.0, 2624.6], [638.0, 2436.0], [639.0, 2455.0], [624.0, 2576.0], [637.0, 2448.0], [636.0, 2467.0], [635.0, 2462.0], [633.0, 2485.5], [623.0, 2577.5], [608.0, 2606.0], [610.0, 2619.0], [609.0, 2605.0], [615.0, 2599.5], [613.0, 2596.6666666666665], [622.0, 2574.0], [620.0, 2582.0], [618.0, 2598.0], [616.0, 2604.0], [631.0, 2475.5], [629.0, 2475.0], [628.0, 2575.6666666666665], [626.0, 2581.0], [669.0, 2371.3333333333335], [670.0, 2381.0], [666.0, 2370.0], [664.0, 2370.0], [662.0, 2364.0], [661.0, 2365.0], [659.0, 2350.0], [657.0, 2341.5], [655.0, 2351.0], [640.0, 2444.0], [647.0, 2431.8333333333335], [645.0, 2445.0], [654.0, 2344.2], [649.0, 2388.0], [691.0, 2360.0], [701.0, 2363.0], [702.0, 2356.0], [690.0, 2362.0], [689.0, 2359.5], [699.0, 2364.0], [698.0, 2360.0], [696.0, 2356.0], [679.0, 2368.3333333333335], [677.0, 2368.75], [672.0, 2363.5], [687.0, 2360.0], [685.0, 2361.0], [684.0, 2362.0], [683.0, 2362.0], [681.0, 2360.0], [680.0, 2366.0], [695.0, 2366.5], [693.0, 2356.0], [692.0, 2371.0], [733.0, 2336.5], [735.0, 2334.0], [731.0, 2335.0], [730.0, 2336.0], [729.0, 2334.0], [710.0, 2354.5], [708.0, 2361.5], [706.0, 2359.25], [719.0, 2337.0], [718.0, 2345.0], [717.0, 2341.0], [716.0, 2343.0], [715.0, 2344.0], [714.0, 2349.0], [713.0, 2349.0], [712.0, 2353.5], [726.0, 2342.0], [725.0, 2334.5], [723.0, 2339.0], [721.0, 2336.5], [766.0, 2339.0], [765.0, 2329.75], [761.0, 2326.0], [759.0, 2325.3333333333335], [756.0, 2328.52380952381], [736.0, 2338.0], [798.0, 2311.0], [799.0, 2315.0], [784.0, 2319.5], [788.0, 2320.3333333333335], [785.0, 2319.0], [797.0, 2316.0], [796.0, 2316.0], [795.0, 2323.5], [794.0, 2314.0], [792.0, 2313.0], [774.0, 2319.0], [772.0, 2330.0], [771.0, 2352.0], [770.0, 2341.0], [769.0, 2338.6666666666665], [780.0, 2334.0], [778.0, 2325.6666666666665], [777.0, 2320.0], [776.0, 2353.0], [791.0, 2314.0], [790.0, 2330.0], [830.0, 2313.0], [831.0, 2309.25], [826.0, 2301.0], [825.0, 2309.0], [823.0, 2307.0], [819.0, 2312.0], [817.0, 2305.0], [814.0, 2314.5], [801.0, 2310.0], [800.0, 2310.0], [805.0, 2324.0], [804.0, 2312.0], [807.0, 2323.0], [806.0, 2321.0], [812.0, 2312.0], [810.0, 2304.0], [809.0, 2309.0], [808.0, 2305.0], [849.0, 2300.0], [863.0, 2318.5], [861.0, 2319.0], [860.0, 2304.4], [837.0, 2300.5], [835.0, 2307.0], [855.0, 2301.0], [852.0, 2299.0], [850.0, 2314.0], [848.0, 2323.6], [847.0, 2322.0], [845.0, 2323.0], [842.0, 2317.0], [841.0, 2309.0], [892.0, 2290.2], [894.0, 2286.0], [891.0, 2285.0], [871.0, 2293.0], [870.0, 2297.5], [868.0, 2296.0], [867.0, 2319.0], [866.0, 2313.0], [864.0, 2290.0], [886.0, 2289.0], [884.0, 2300.0], [882.0, 2294.6666666666665], [880.0, 2288.5], [877.0, 2287.0], [876.0, 2288.5], [874.0, 2292.0], [873.0, 2297.0], [872.0, 2295.0], [926.0, 2286.0], [927.0, 2285.0], [923.0, 2279.0], [922.0, 2285.0], [919.0, 2287.0], [918.0, 2281.0], [917.0, 2285.0], [911.0, 2282.3333333333335], [897.0, 2294.0], [896.0, 2284.0], [899.0, 2282.0], [898.0, 2291.0], [902.0, 2283.5], [900.0, 2290.0], [908.0, 2283.75], [904.0, 2282.5], [946.0, 2269.0], [957.0, 2280.0], [958.0, 2273.6666666666665], [944.0, 2200.6666666666665], [956.0, 2277.5], [953.0, 2278.0], [952.0, 2279.0], [935.0, 2278.75], [932.0, 2279.0], [930.0, 2281.0], [928.0, 2280.5], [941.0, 2277.0], [939.0, 2278.5], [949.0, 2276.5], [948.0, 2270.0], [947.0, 2277.0], [988.0, 2275.0], [991.0, 2273.3333333333335], [987.0, 2275.5], [986.0, 2275.0], [982.0, 2270.0], [979.0, 2289.0], [978.0, 2276.0], [976.0, 2275.5], [975.0, 2276.0], [962.0, 2282.0], [961.0, 2274.6666666666665], [967.0, 2277.5], [964.0, 2277.6666666666665], [974.0, 2280.0], [973.0, 2274.0], [971.0, 2276.0], [970.0, 2275.0], [969.0, 2277.3333333333335], [1000.0, 2125.0], [999.0, 2119.0], [995.0, 2123.0], [994.0, 2115.0], [993.0, 2277.0], [1.0, 21209.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[501.4160000000003, 10480.206999999991]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 21182.0], [3.0, 21153.0], [4.0, 21144.0], [5.0, 21116.0], [6.0, 20978.0], [7.0, 20953.0], [8.0, 21026.0], [9.0, 20892.0], [10.0, 20858.0], [12.0, 20928.0], [13.0, 20786.0], [14.0, 20840.0], [15.0, 20803.0], [16.0, 20801.0], [17.0, 20737.0], [18.0, 20709.0], [19.0, 20683.0], [20.0, 20654.0], [21.0, 20625.0], [22.0, 20622.0], [23.0, 20564.0], [24.0, 20526.0], [25.0, 20495.0], [26.0, 20471.0], [27.0, 20440.0], [28.0, 20419.0], [29.0, 20376.0], [30.0, 20343.0], [31.0, 20316.0], [33.0, 20256.0], [32.0, 20285.0], [35.0, 20199.0], [34.0, 20227.0], [37.0, 20138.0], [36.0, 20165.0], [39.0, 20073.0], [38.0, 20102.0], [41.0, 20039.0], [40.0, 20047.0], [43.0, 19952.0], [42.0, 19977.0], [45.0, 19886.0], [44.0, 19911.0], [47.0, 19834.0], [46.0, 19865.0], [49.0, 19795.0], [48.0, 19795.0], [51.0, 19702.0], [50.0, 19760.0], [53.0, 19642.0], [52.0, 19674.0], [55.0, 19587.0], [54.0, 19620.0], [57.0, 19528.0], [56.0, 19552.0], [59.0, 19470.0], [58.0, 19485.0], [61.0, 19437.0], [60.0, 19427.0], [63.0, 19374.0], [62.0, 19402.0], [67.0, 19254.0], [66.0, 19263.0], [65.0, 19336.0], [64.0, 19341.0], [71.0, 19134.0], [70.0, 19157.0], [69.0, 19187.0], [68.0, 19215.0], [75.0, 19022.0], [74.0, 19047.0], [73.0, 19067.0], [72.0, 19107.0], [79.0, 18889.0], [78.0, 18958.0], [77.0, 18960.0], [76.0, 18989.0], [83.0, 18772.0], [82.0, 18796.0], [81.0, 18828.0], [80.0, 18857.0], [87.0, 18770.0], [86.0, 18772.0], [85.0, 18767.0], [84.0, 18769.0], [90.0, 18766.0], [89.0, 18766.0], [88.0, 18765.0], [95.0, 18765.0], [94.0, 18762.5], [92.0, 18764.0], [98.0, 18764.0], [97.0, 18759.5], [103.0, 18754.0], [102.0, 18757.0], [101.0, 18757.0], [100.0, 18756.0], [107.0, 18745.0], [106.0, 18751.0], [105.0, 18750.0], [104.0, 18758.0], [111.0, 18747.0], [109.0, 18750.0], [108.0, 18751.0], [115.0, 18742.0], [114.0, 18736.0], [113.0, 18738.0], [112.0, 18744.0], [119.0, 18738.0], [118.0, 18736.0], [117.0, 18733.0], [116.0, 18735.0], [123.0, 18724.0], [122.0, 18733.0], [121.0, 18728.0], [120.0, 18731.0], [127.0, 18729.0], [126.0, 18724.0], [125.0, 18722.0], [124.0, 18724.0], [134.0, 18721.0], [133.0, 18680.0], [132.0, 18661.0], [131.0, 18688.0], [130.0, 18727.0], [129.0, 18726.0], [128.0, 18724.0], [143.0, 18678.0], [142.0, 18676.0], [138.0, 18656.0], [137.0, 18718.0], [136.0, 18697.5], [151.0, 18662.0], [149.0, 18664.0], [148.0, 18674.285714285714], [146.0, 18678.0], [159.0, 18649.0], [158.0, 18673.0], [157.0, 18653.0], [156.0, 18652.0], [155.0, 18657.0], [154.0, 18677.0], [153.0, 18663.0], [152.0, 18653.0], [167.0, 18660.0], [166.0, 18637.0], [165.0, 18669.0], [164.0, 18645.0], [163.0, 18645.0], [162.0, 18649.0], [160.0, 18573.0], [175.0, 18644.0], [173.0, 18635.0], [172.0, 18595.0], [171.0, 18645.5], [169.0, 18623.5], [183.0, 18531.0], [182.0, 18624.5], [178.0, 18631.5], [176.0, 18644.0], [191.0, 18613.0], [190.0, 18602.0], [188.0, 18621.0], [187.0, 18636.0], [186.0, 18635.0], [185.0, 18574.0], [184.0, 18602.0], [199.0, 18632.0], [198.0, 18606.0], [197.0, 18611.0], [196.0, 18626.0], [195.0, 18614.0], [194.0, 18629.0], [193.0, 18614.0], [192.0, 18611.0], [207.0, 18543.0], [206.0, 18617.0], [205.0, 18621.0], [204.0, 18507.0], [203.0, 18606.0], [202.0, 18617.0], [201.0, 18615.0], [200.0, 18625.0], [215.0, 18605.0], [214.0, 18607.0], [213.0, 18607.0], [212.0, 18611.0], [211.0, 18552.0], [210.0, 18504.0], [209.0, 18617.0], [208.0, 18616.0], [223.0, 18589.0], [221.0, 18596.0], [220.0, 18495.0], [219.0, 18599.0], [218.0, 18590.0], [217.0, 18558.0], [216.0, 18607.0], [231.0, 18521.0], [230.0, 18485.5], [228.0, 18481.0], [227.0, 18493.0], [226.0, 18532.0], [225.0, 18531.0], [224.0, 18592.0], [239.0, 18469.0], [238.0, 18494.5], [236.0, 18500.5], [234.0, 18481.0], [233.0, 18473.0], [232.0, 18476.0], [247.0, 18468.0], [246.0, 18564.0], [245.0, 18501.0], [244.0, 18512.5], [242.0, 18482.0], [240.0, 18471.0], [255.0, 18481.0], [254.0, 18489.5], [252.0, 18482.0], [250.0, 18453.0], [249.0, 18538.0], [248.0, 18507.0], [270.0, 18476.0], [271.0, 18475.0], [269.0, 18476.0], [268.0, 18480.0], [267.0, 18442.0], [266.0, 18483.0], [265.0, 18462.0], [264.0, 18496.0], [263.0, 18499.0], [259.0, 18509.333333333332], [256.0, 18448.0], [262.0, 18488.0], [261.0, 18468.5], [286.0, 18451.0], [287.0, 18461.0], [285.0, 18470.0], [284.0, 18464.0], [283.0, 18453.0], [281.0, 18469.0], [280.0, 18463.0], [279.0, 18497.0], [273.0, 18472.0], [272.0, 18517.0], [275.0, 18480.0], [274.0, 18485.0], [278.0, 18466.0], [277.0, 18551.0], [276.0, 18470.0], [303.0, 18445.0], [301.0, 18457.363636363636], [290.0, 18455.0], [288.0, 18467.0], [306.0, 18438.0], [317.0, 18440.333333333332], [316.0, 18483.0], [315.0, 18443.0], [313.0, 18440.0], [312.0, 18435.0], [309.0, 18439.0], [308.0, 18464.5], [305.0, 18442.0], [304.0, 18448.0], [332.0, 18423.0], [334.0, 18445.0], [335.0, 18427.0], [333.0, 18359.0], [331.0, 18424.333333333332], [328.0, 18426.0], [326.0, 18381.0], [325.0, 18445.5], [322.0, 18437.0], [321.0, 18448.0], [350.0, 18420.0], [351.0, 18410.0], [349.0, 18414.0], [348.0, 18382.0], [347.0, 18393.0], [346.0, 18323.0], [345.0, 18393.0], [344.0, 18398.0], [343.0, 18376.5], [337.0, 18384.5], [339.0, 18450.0], [338.0, 18361.0], [341.0, 18435.0], [340.0, 18438.0], [366.0, 18229.0], [367.0, 18168.0], [365.0, 18228.0], [364.0, 18248.0], [363.0, 18233.0], [362.0, 18227.0], [361.0, 18270.5], [359.0, 18305.0], [353.0, 18395.0], [352.0, 18405.0], [355.0, 18334.0], [354.0, 18383.0], [358.0, 18290.0], [357.0, 18284.0], [356.0, 18306.0], [380.0, 18145.0], [382.0, 18178.0], [383.0, 18183.0], [381.0, 18148.0], [379.0, 18145.5], [377.0, 18175.5], [375.0, 18164.0], [369.0, 18203.0], [368.0, 18193.0], [371.0, 18173.0], [370.0, 18181.0], [374.0, 18157.0], [373.0, 18144.0], [372.0, 18196.0], [396.0, 18153.5], [399.0, 18162.0], [398.0, 18140.0], [397.0, 18144.0], [394.0, 18151.333333333332], [391.0, 18144.0], [385.0, 18152.0], [384.0, 18158.0], [387.0, 18151.0], [386.0, 18161.0], [390.0, 18168.0], [389.0, 18174.0], [388.0, 18150.0], [414.0, 18141.0], [415.0, 18144.0], [413.0, 18148.0], [412.0, 18150.0], [411.0, 18146.0], [410.0, 18149.0], [409.0, 18131.0], [408.0, 18150.0], [407.0, 18154.5], [401.0, 18139.0], [406.0, 18152.0], [404.0, 18152.666666666668], [430.0, 18117.0], [431.0, 18116.0], [429.0, 18118.0], [428.0, 18121.0], [427.0, 18122.0], [426.0, 18119.0], [425.0, 18122.0], [424.0, 18124.0], [423.0, 18128.0], [416.0, 18140.0], [419.0, 18133.0], [418.0, 18132.0], [422.0, 18124.0], [421.0, 18125.0], [420.0, 18127.0], [446.0, 18096.0], [447.0, 18095.0], [445.0, 18096.0], [444.0, 18098.0], [443.0, 18099.0], [442.0, 18094.0], [441.0, 18097.0], [440.0, 18101.0], [439.0, 18104.0], [432.0, 18112.0], [435.0, 18106.0], [433.0, 18111.0], [438.0, 18104.0], [437.0, 18107.0], [436.0, 18109.0], [462.0, 17654.0], [463.0, 17647.0], [461.0, 17659.0], [460.0, 17686.0], [459.0, 17737.0], [458.0, 17800.0], [457.0, 17984.0], [456.0, 18058.0], [455.0, 18065.0], [448.0, 18092.0], [451.0, 18090.0], [450.0, 18091.0], [454.0, 18067.0], [453.0, 18069.0], [452.0, 18089.0], [478.0, 14616.0], [479.0, 14618.0], [477.0, 15412.0], [476.0, 15728.0], [475.0, 15697.0], [474.0, 15882.0], [473.0, 16060.0], [472.0, 17042.0], [471.0, 17170.0], [465.0, 17711.0], [464.0, 17613.0], [467.0, 17544.0], [466.0, 17553.0], [470.0, 17301.0], [469.0, 17466.0], [468.0, 17578.0], [494.0, 14031.0], [495.0, 14101.0], [493.0, 14028.0], [492.0, 14042.0], [491.0, 14042.0], [489.0, 14065.0], [488.0, 14061.0], [487.0, 14064.0], [481.0, 14406.0], [480.0, 14541.0], [483.0, 14107.0], [482.0, 14133.0], [486.0, 14072.0], [485.0, 14087.0], [484.0, 14103.0], [499.0, 13940.0], [509.0, 2970.0], [508.0, 2976.5], [506.0, 3023.0], [504.0, 13772.0], [503.0, 13821.0], [501.0, 13798.0], [500.0, 13883.0], [498.0, 13942.0], [497.0, 13974.0], [496.0, 13964.0], [542.0, 2802.5], [543.0, 2782.0], [538.0, 2794.5], [536.0, 2849.0], [535.0, 2806.0], [534.0, 2830.8], [529.0, 2837.1111111111113], [520.0, 2899.0], [514.0, 2919.5], [512.0, 2939.6666666666665], [517.0, 2801.5], [516.0, 2901.0], [519.0, 2814.0], [518.0, 2797.0], [574.0, 2629.0], [575.0, 2642.5], [562.0, 2655.0], [573.0, 2637.0], [572.0, 2638.0], [570.0, 2678.0], [569.0, 2650.0], [568.0, 2651.2], [549.0, 2758.0], [547.0, 2780.0], [545.0, 2762.0], [544.0, 2791.0], [558.0, 2698.5], [554.0, 2740.0], [553.0, 2739.75], [567.0, 2657.5], [564.0, 2651.5], [606.0, 2615.0], [607.0, 2614.0], [605.0, 2609.5], [603.0, 2616.0], [601.0, 2618.5], [600.0, 2614.0], [590.0, 2629.4], [577.0, 2633.5], [580.0, 2630.0], [579.0, 2637.0], [583.0, 2638.0], [581.0, 2634.0], [587.0, 2628.0], [586.0, 2630.0], [598.0, 2632.0], [596.0, 2622.0], [595.0, 2624.6], [638.0, 2436.0], [639.0, 2455.0], [624.0, 2576.0], [637.0, 2448.0], [636.0, 2467.0], [635.0, 2462.0], [633.0, 2485.5], [623.0, 2577.5], [608.0, 2606.0], [610.0, 2619.0], [609.0, 2605.0], [615.0, 2599.5], [613.0, 2596.6666666666665], [622.0, 2574.0], [620.0, 2582.0], [618.0, 2598.0], [616.0, 2604.0], [631.0, 2475.5], [629.0, 2475.0], [628.0, 2575.6666666666665], [626.0, 2581.0], [669.0, 2371.3333333333335], [670.0, 2381.0], [666.0, 2370.0], [664.0, 2370.0], [662.0, 2364.0], [661.0, 2365.0], [659.0, 2350.0], [657.0, 2341.5], [655.0, 2351.0], [640.0, 2444.0], [647.0, 2431.8333333333335], [645.0, 2445.0], [654.0, 2344.2], [649.0, 2388.0], [691.0, 2360.0], [701.0, 2363.0], [702.0, 2356.0], [690.0, 2362.0], [689.0, 2359.5], [699.0, 2364.0], [698.0, 2360.0], [696.0, 2356.0], [679.0, 2368.3333333333335], [677.0, 2368.75], [672.0, 2363.5], [687.0, 2360.0], [685.0, 2361.0], [684.0, 2362.0], [683.0, 2362.0], [681.0, 2360.0], [680.0, 2366.0], [695.0, 2366.5], [693.0, 2356.0], [692.0, 2371.0], [733.0, 2336.5], [735.0, 2334.0], [731.0, 2335.0], [730.0, 2336.0], [729.0, 2334.0], [710.0, 2354.5], [708.0, 2361.5], [706.0, 2359.25], [719.0, 2337.0], [718.0, 2345.0], [717.0, 2341.0], [716.0, 2343.0], [715.0, 2344.0], [714.0, 2349.0], [713.0, 2349.0], [712.0, 2353.5], [726.0, 2342.0], [725.0, 2334.5], [723.0, 2339.0], [721.0, 2336.5], [766.0, 2339.0], [765.0, 2329.75], [761.0, 2326.0], [759.0, 2325.3333333333335], [756.0, 2328.52380952381], [736.0, 2338.0], [798.0, 2311.0], [799.0, 2315.0], [784.0, 2319.5], [788.0, 2320.3333333333335], [785.0, 2319.0], [797.0, 2316.0], [796.0, 2316.0], [795.0, 2323.5], [794.0, 2314.0], [792.0, 2313.0], [774.0, 2319.0], [772.0, 2330.0], [771.0, 2352.0], [770.0, 2341.0], [769.0, 2338.6666666666665], [780.0, 2334.0], [778.0, 2325.6666666666665], [777.0, 2320.0], [776.0, 2353.0], [791.0, 2314.0], [790.0, 2330.0], [830.0, 2313.0], [831.0, 2309.25], [826.0, 2301.0], [825.0, 2309.0], [823.0, 2307.0], [819.0, 2312.0], [817.0, 2305.0], [814.0, 2314.5], [801.0, 2310.0], [800.0, 2310.0], [805.0, 2324.0], [804.0, 2312.0], [807.0, 2323.0], [806.0, 2321.0], [812.0, 2312.0], [810.0, 2304.0], [809.0, 2309.0], [808.0, 2305.0], [849.0, 2300.0], [863.0, 2318.5], [861.0, 2319.0], [860.0, 2304.4], [837.0, 2300.5], [835.0, 2307.0], [855.0, 2301.0], [852.0, 2299.0], [850.0, 2314.0], [848.0, 2323.6], [847.0, 2322.0], [845.0, 2323.0], [842.0, 2317.0], [841.0, 2309.0], [892.0, 2290.2], [894.0, 2286.0], [891.0, 2285.0], [871.0, 2293.0], [870.0, 2297.5], [868.0, 2296.0], [867.0, 2319.0], [866.0, 2313.0], [864.0, 2290.0], [886.0, 2289.0], [884.0, 2300.0], [882.0, 2294.6666666666665], [880.0, 2288.5], [877.0, 2287.0], [876.0, 2288.5], [874.0, 2292.0], [873.0, 2297.0], [872.0, 2295.0], [926.0, 2286.0], [927.0, 2285.0], [923.0, 2279.0], [922.0, 2285.0], [919.0, 2287.0], [918.0, 2281.0], [917.0, 2285.0], [911.0, 2282.3333333333335], [897.0, 2294.0], [896.0, 2284.0], [899.0, 2282.0], [898.0, 2291.0], [902.0, 2283.5], [900.0, 2290.0], [908.0, 2283.75], [904.0, 2282.5], [946.0, 2269.0], [957.0, 2280.0], [958.0, 2273.6666666666665], [944.0, 2200.6666666666665], [956.0, 2277.5], [953.0, 2278.0], [952.0, 2279.0], [935.0, 2278.75], [932.0, 2279.0], [930.0, 2281.0], [928.0, 2280.5], [941.0, 2277.0], [939.0, 2278.5], [949.0, 2276.5], [948.0, 2270.0], [947.0, 2277.0], [988.0, 2275.0], [991.0, 2273.3333333333335], [987.0, 2275.5], [986.0, 2275.0], [982.0, 2270.0], [979.0, 2289.0], [978.0, 2276.0], [976.0, 2275.5], [975.0, 2276.0], [962.0, 2282.0], [961.0, 2274.6666666666665], [967.0, 2277.5], [964.0, 2277.6666666666665], [974.0, 2280.0], [973.0, 2274.0], [971.0, 2276.0], [970.0, 2275.0], [969.0, 2277.3333333333335], [1000.0, 2125.0], [999.0, 2119.0], [995.0, 2123.0], [994.0, 2115.0], [993.0, 2277.0], [1.0, 21209.0]], "isOverall": false, "label": "Test Fragment", "isController": true}, {"data": [[501.4160000000003, 10480.206999999997]], "isOverall": false, "label": "Test Fragment-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8373.833333333334, "minX": 1.68041844E12, "maxY": 13689.533333333333, "series": [{"data": [[1.68041844E12, 13689.533333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68041844E12, 8373.833333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68041844E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 10480.206999999991, "minX": 1.68041844E12, "maxY": 10480.206999999997, "series": [{"data": [[1.68041844E12, 10480.206999999991]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68041844E12, 10480.206999999997]], "isOverall": false, "label": "Test Fragment", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68041844E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 10458.663999999995, "minX": 1.68041844E12, "maxY": 10458.663999999995, "series": [{"data": [[1.68041844E12, 10458.663999999995]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68041844E12, 10458.663999999995]], "isOverall": false, "label": "Test Fragment", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68041844E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1179.5819999999997, "minX": 1.68041844E12, "maxY": 1179.582, "series": [{"data": [[1.68041844E12, 1179.5819999999997]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68041844E12, 1179.582]], "isOverall": false, "label": "Test Fragment", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68041844E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 13772.0, "minX": 1.68041844E12, "maxY": 21209.0, "series": [{"data": [[1.68041844E12, 21209.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68041844E12, 19731.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68041844E12, 21111.5]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68041844E12, 20489.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.68041844E12, 13772.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68041844E12, 18483.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68041844E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2315.5, "minX": 3.0, "maxY": 20875.0, "series": [{"data": [[4.0, 15554.5], [33.0, 20073.0], [22.0, 20875.0], [24.0, 14041.0], [3.0, 17170.0], [193.0, 18661.0], [221.0, 18284.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[372.0, 2315.5], [124.0, 2651.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 372.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2315.5, "minX": 3.0, "maxY": 20875.0, "series": [{"data": [[4.0, 15554.5], [33.0, 20073.0], [22.0, 20875.0], [24.0, 14041.0], [3.0, 17170.0], [193.0, 18661.0], [221.0, 18284.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[372.0, 2315.5], [124.0, 2651.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 372.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.68041844E12, "maxY": 16.666666666666668, "series": [{"data": [[1.68041844E12, 16.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68041844E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.68041844E12, "maxY": 8.4, "series": [{"data": [[1.68041844E12, 0.16666666666666666]], "isOverall": false, "label": "Non HTTP response code: javax.net.ssl.SSLException", "isController": false}, {"data": [[1.68041844E12, 8.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68041844E12, 8.1]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68041844E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.266666666666667, "minX": 1.68041844E12, "maxY": 8.4, "series": [{"data": [[1.68041844E12, 8.266666666666667]], "isOverall": false, "label": "Test Fragment-failure", "isController": true}, {"data": [[1.68041844E12, 8.4]], "isOverall": false, "label": "Test Fragment-success", "isController": true}, {"data": [[1.68041844E12, 8.266666666666667]], "isOverall": false, "label": "Login-failure", "isController": false}, {"data": [[1.68041844E12, 8.4]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68041844E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16.533333333333335, "minX": 1.68041844E12, "maxY": 16.8, "series": [{"data": [[1.68041844E12, 16.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68041844E12, 16.533333333333335]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68041844E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

